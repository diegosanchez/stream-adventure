Convertir datos desde `process.stdin` a mayúsculas y escribirlos en `process.stdout`
utilizando el módulo `through`.

through(write, end) devuelve un stream readable/writeble (flujo escribible/leible), 
dadas las funciones `write` and `end`, ambas son opcionales.

Cuando invocas `src.pipe(dst)`, donde  stream `dst` fue creado con `through()`, 
la función `write(buf)` será invocada cuando haya datos disponibles en el stream `src`.
Cuando `src` haya terminado de enviar datos, la función `end()` será invocada.

Dentro de las funciones (conocidas como 'callbacks') `write` y `end`, `this` referencia 
a stream creado con through() por lo tanto podrás invocar `this.queue()` dentro de las
funciones (`write` y `end`) con el fin de realizar la transformación.

Cuando especificamos un valor falso para el parametro 'buf' para la función `write`, esta función 
se puede utilizar para pasar los datos de entrada ('buf') derectamente hacia la salida 
sin realizarle ninguna modificación:

    function write (buf) { this.queue(buf) }
 
`this.queue(null)` le dice al stream consumidor que no espera más datos.

La función `end` por defecto es:

    function end () { this.queue(null) }

Por ejemplo, aquí hay un programa que disparan la invocación a las funciones 
`write(buf)` y `end()` luego de invocar a `.write()` and `.end()` en forma manual:

    var through = require('through');
    var tr = through(write, end);
    tr.write('beep\n');
    tr.write('boop\n');
    tr.end();
    
    function write (buf) { console.dir(buf) }
    function end () { console.log('__END__') }

En lugar de invocar `console.dir(buf)`, tu código debería utilizar `this.queue()` en
tu función `write()` para transformar a mayusculas los datos.

No olvides alimentar tu 'stream' con los datos provenientes del 'stdin' y 'stdout' con
los datos de salida, lo cual debería asemejarse a:

    process.stdin.pipe(tr).pipe(process.stdout);

Notar que la pieza de información (chunks) que se obtiene desde `process.stdin` son 
Buffers, no strings. Podrás invocar `buf.toString()` sobre un Buffer para obtener un 
string y strings pueden recibir `.toUpperCase()`.

Asegurate de ejecutar `npm install through` en el directory donde reciden los archivos 
de tus soluicones.
